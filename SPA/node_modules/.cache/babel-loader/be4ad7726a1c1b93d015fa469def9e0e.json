{"ast":null,"code":"var _jsxFileName = \"/Users/speedsis/Downloads/ms-identity-javascript-react-tutorial-main/2-Authorization-I/1-call-graph/SPA/src/App.jsx\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { MsalProvider } from \"@azure/msal-react\";\nimport { PageLayout } from \"./components/PageLayout\";\nimport { Mails } from \"./pages/Mails\";\nimport { Tenant } from \"./pages/Tenant\";\nimport { Profile } from \"./pages/Profile\";\nimport \"./styles/App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Pages = () => {\n  return /*#__PURE__*/_jsxDEV(Switch, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/profile\",\n      children: /*#__PURE__*/_jsxDEV(Profile, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/mails\",\n      children: /*#__PURE__*/_jsxDEV(Mails, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/tenant\",\n      children: /*#__PURE__*/_jsxDEV(Tenant, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n/**\n * msal-react is built on the React context API and all parts of your app that require authentication must be \n * wrapped in the MsalProvider component. You will first need to initialize an instance of PublicClientApplication \n * then pass this to MsalProvider as a prop. All components underneath MsalProvider will have access to the \n * PublicClientApplication instance via context as well as all hooks and components provided by msal-react. For more, visit:\n * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-react/docs/getting-started.md\n */\n\n\n_c = Pages;\nexport const App = ({\n  instance\n}) => {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(MsalProvider, {\n      instance: instance,\n      children: /*#__PURE__*/_jsxDEV(PageLayout, {\n        children: /*#__PURE__*/_jsxDEV(Pages, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_c2 = App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Pages\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/speedsis/Downloads/ms-identity-javascript-react-tutorial-main/2-Authorization-I/1-call-graph/SPA/src/App.jsx"],"names":["BrowserRouter","Router","Switch","Route","MsalProvider","PageLayout","Mails","Tenant","Profile","Pages","App","instance"],"mappings":";AAAA,SAASA,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;AAEA,SAASC,YAAT,QAA6B,mBAA7B;AAEA,SAASC,UAAT,QAA2B,yBAA3B;AACA,SAASC,KAAT,QAAsB,eAAtB;AACA,SAASC,MAAT,QAAuB,gBAAvB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AAEA,OAAO,kBAAP;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClB,sBACE,QAAC,MAAD;AAAA,4BACE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAA,6BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAA,6BACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJF,eAOE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,SAAZ;AAAA,6BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAdD;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;;;KAtBMA,K;AAuBN,OAAO,MAAMC,GAAG,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACnC,sBACE,QAAC,MAAD;AAAA,2BACE,QAAC,YAAD;AAAc,MAAA,QAAQ,EAAEA,QAAxB;AAAA,6BACE,QAAC,UAAD;AAAA,+BACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAVM;MAAMD,G","sourcesContent":["import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport { MsalProvider } from \"@azure/msal-react\";\n\nimport { PageLayout } from \"./components/PageLayout\";\nimport { Mails } from \"./pages/Mails\";\nimport { Tenant } from \"./pages/Tenant\";\nimport { Profile } from \"./pages/Profile\";\n\nimport \"./styles/App.css\";\n\nconst Pages = () => {\n  return (\n    <Switch>\n      <Route path=\"/profile\">\n        <Profile />\n      </Route>\n      <Route path=\"/mails\">\n        <Mails />\n      </Route>\n      <Route path=\"/tenant\">\n        <Tenant />\n      </Route>\n    </Switch>\n  )\n}\n\n/**\n * msal-react is built on the React context API and all parts of your app that require authentication must be \n * wrapped in the MsalProvider component. You will first need to initialize an instance of PublicClientApplication \n * then pass this to MsalProvider as a prop. All components underneath MsalProvider will have access to the \n * PublicClientApplication instance via context as well as all hooks and components provided by msal-react. For more, visit:\n * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-react/docs/getting-started.md\n */\nexport const App = ({ instance }) => {\n  return (\n    <Router>\n      <MsalProvider instance={instance}>\n        <PageLayout>\n          <Pages />\n        </PageLayout>\n      </MsalProvider>\n    </Router>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}