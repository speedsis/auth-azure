{"ast":null,"code":"/*! @azure/msal-browser v2.16.0 2021-07-22 */\n'use strict';\n\nimport { OIDC_DEFAULT_SCOPES } from '@azure/msal-common';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\n/**\r\n * Constants\r\n */\n\nvar BrowserConstants = {\n  /**\r\n   * Interaction in progress cache value\r\n   */\n  INTERACTION_IN_PROGRESS_VALUE: \"interaction_in_progress\",\n\n  /**\r\n   * Invalid grant error code\r\n   */\n  INVALID_GRANT_ERROR: \"invalid_grant\",\n\n  /**\r\n   * Default popup window width\r\n   */\n  POPUP_WIDTH: 483,\n\n  /**\r\n   * Default popup window height\r\n   */\n  POPUP_HEIGHT: 600,\n\n  /**\r\n   * Name of the popup window starts with\r\n   */\n  POPUP_NAME_PREFIX: \"msal\",\n\n  /**\r\n   * Default popup monitor poll interval in milliseconds\r\n   */\n  POLL_INTERVAL_MS: 50,\n\n  /**\r\n   * Msal-browser SKU\r\n   */\n  MSAL_SKU: \"msal.js.browser\"\n};\nvar BrowserCacheLocation;\n\n(function (BrowserCacheLocation) {\n  BrowserCacheLocation[\"LocalStorage\"] = \"localStorage\";\n  BrowserCacheLocation[\"SessionStorage\"] = \"sessionStorage\";\n  BrowserCacheLocation[\"MemoryStorage\"] = \"memoryStorage\";\n})(BrowserCacheLocation || (BrowserCacheLocation = {}));\n/**\r\n * HTTP Request types supported by MSAL.\r\n */\n\n\nvar HTTP_REQUEST_TYPE;\n\n(function (HTTP_REQUEST_TYPE) {\n  HTTP_REQUEST_TYPE[\"GET\"] = \"GET\";\n  HTTP_REQUEST_TYPE[\"POST\"] = \"POST\";\n})(HTTP_REQUEST_TYPE || (HTTP_REQUEST_TYPE = {}));\n/**\r\n * Temporary cache keys for MSAL, deleted after any request.\r\n */\n\n\nvar TemporaryCacheKeys;\n\n(function (TemporaryCacheKeys) {\n  TemporaryCacheKeys[\"AUTHORITY\"] = \"authority\";\n  TemporaryCacheKeys[\"ACQUIRE_TOKEN_ACCOUNT\"] = \"acquireToken.account\";\n  TemporaryCacheKeys[\"SESSION_STATE\"] = \"session.state\";\n  TemporaryCacheKeys[\"REQUEST_STATE\"] = \"request.state\";\n  TemporaryCacheKeys[\"NONCE_IDTOKEN\"] = \"nonce.id_token\";\n  TemporaryCacheKeys[\"ORIGIN_URI\"] = \"request.origin\";\n  TemporaryCacheKeys[\"RENEW_STATUS\"] = \"token.renew.status\";\n  TemporaryCacheKeys[\"URL_HASH\"] = \"urlHash\";\n  TemporaryCacheKeys[\"REQUEST_PARAMS\"] = \"request.params\";\n  TemporaryCacheKeys[\"SCOPES\"] = \"scopes\";\n  TemporaryCacheKeys[\"INTERACTION_STATUS_KEY\"] = \"interaction.status\";\n  TemporaryCacheKeys[\"CCS_CREDENTIAL\"] = \"ccs.credential\";\n})(TemporaryCacheKeys || (TemporaryCacheKeys = {}));\n/**\r\n * API Codes for Telemetry purposes.\r\n * Before adding a new code you must claim it in the MSAL Telemetry tracker as these number spaces are shared across all MSALs\r\n * 0-99 Silent Flow\r\n * 800-899 Auth Code Flow\r\n */\n\n\nvar ApiId;\n\n(function (ApiId) {\n  ApiId[ApiId[\"acquireTokenRedirect\"] = 861] = \"acquireTokenRedirect\";\n  ApiId[ApiId[\"acquireTokenPopup\"] = 862] = \"acquireTokenPopup\";\n  ApiId[ApiId[\"ssoSilent\"] = 863] = \"ssoSilent\";\n  ApiId[ApiId[\"acquireTokenSilent_authCode\"] = 864] = \"acquireTokenSilent_authCode\";\n  ApiId[ApiId[\"handleRedirectPromise\"] = 865] = \"handleRedirectPromise\";\n  ApiId[ApiId[\"acquireTokenSilent_silentFlow\"] = 61] = \"acquireTokenSilent_silentFlow\";\n  ApiId[ApiId[\"logout\"] = 961] = \"logout\";\n  ApiId[ApiId[\"logoutPopup\"] = 962] = \"logoutPopup\";\n})(ApiId || (ApiId = {}));\n/*\r\n * Interaction type of the API - used for state and telemetry\r\n */\n\n\nvar InteractionType;\n\n(function (InteractionType) {\n  InteractionType[\"Redirect\"] = \"redirect\";\n  InteractionType[\"Popup\"] = \"popup\";\n  InteractionType[\"Silent\"] = \"silent\";\n})(InteractionType || (InteractionType = {}));\n/**\r\n * Types of interaction currently in progress.\r\n * Used in events in wrapper libraries to invoke functions when certain interaction is in progress or all interactions are complete.\r\n */\n\n\nvar InteractionStatus;\n\n(function (InteractionStatus) {\n  /**\r\n   * Initial status before interaction occurs\r\n   */\n  InteractionStatus[\"Startup\"] = \"startup\";\n  /**\r\n   * Status set when all login calls occuring\r\n   */\n\n  InteractionStatus[\"Login\"] = \"login\";\n  /**\r\n   * Status set when logout call occuring\r\n   */\n\n  InteractionStatus[\"Logout\"] = \"logout\";\n  /**\r\n   * Status set for acquireToken calls\r\n   */\n\n  InteractionStatus[\"AcquireToken\"] = \"acquireToken\";\n  /**\r\n   * Status set for ssoSilent calls\r\n   */\n\n  InteractionStatus[\"SsoSilent\"] = \"ssoSilent\";\n  /**\r\n   * Status set when handleRedirect in progress\r\n   */\n\n  InteractionStatus[\"HandleRedirect\"] = \"handleRedirect\";\n  /**\r\n   * Status set when interaction is complete\r\n   */\n\n  InteractionStatus[\"None\"] = \"none\";\n})(InteractionStatus || (InteractionStatus = {}));\n\nvar DEFAULT_REQUEST = {\n  scopes: OIDC_DEFAULT_SCOPES\n};\n/**\r\n * JWK Key Format string (Type MUST be defined for window crypto APIs)\r\n */\n\nvar KEY_FORMAT_JWK = \"jwk\"; // Supported wrapper SKUs\n\nvar WrapperSKU;\n\n(function (WrapperSKU) {\n  WrapperSKU[\"React\"] = \"@azure/msal-react\";\n  WrapperSKU[\"Angular\"] = \"@azure/msal-angular\";\n})(WrapperSKU || (WrapperSKU = {}));\n\nexport { ApiId, BrowserCacheLocation, BrowserConstants, DEFAULT_REQUEST, HTTP_REQUEST_TYPE, InteractionStatus, InteractionType, KEY_FORMAT_JWK, TemporaryCacheKeys, WrapperSKU };","map":{"version":3,"sources":["../../src/utils/BrowserConstants.ts"],"names":[],"mappings":"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","sourcesContent":["/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { OIDC_DEFAULT_SCOPES } from \"@azure/msal-common\";\r\nimport { PopupRequest } from \"../request/PopupRequest\";\r\nimport { RedirectRequest } from \"../request/RedirectRequest\";\r\n\r\n/**\r\n * Constants\r\n */\r\nexport const BrowserConstants = {\r\n    /**\r\n     * Interaction in progress cache value\r\n     */\r\n    INTERACTION_IN_PROGRESS_VALUE: \"interaction_in_progress\",\r\n    /**\r\n     * Invalid grant error code\r\n     */\r\n    INVALID_GRANT_ERROR: \"invalid_grant\",\r\n    /**\r\n     * Default popup window width\r\n     */\r\n    POPUP_WIDTH: 483,\r\n    /**\r\n     * Default popup window height\r\n     */\r\n    POPUP_HEIGHT: 600,\r\n    /**\r\n     * Name of the popup window starts with\r\n     */\r\n    POPUP_NAME_PREFIX: \"msal\",\r\n    /**\r\n     * Default popup monitor poll interval in milliseconds\r\n     */\r\n    POLL_INTERVAL_MS: 50,\r\n    /**\r\n     * Msal-browser SKU\r\n     */\r\n    MSAL_SKU: \"msal.js.browser\",\r\n};\r\n\r\nexport enum BrowserCacheLocation {\r\n    LocalStorage = \"localStorage\",\r\n    SessionStorage = \"sessionStorage\",\r\n    MemoryStorage = \"memoryStorage\"\r\n}\r\n\r\n/**\r\n * HTTP Request types supported by MSAL.\r\n */\r\nexport enum HTTP_REQUEST_TYPE {\r\n    GET = \"GET\",\r\n    POST = \"POST\"\r\n}\r\n\r\n/**\r\n * Temporary cache keys for MSAL, deleted after any request.\r\n */\r\nexport enum TemporaryCacheKeys {\r\n    AUTHORITY = \"authority\",\r\n    ACQUIRE_TOKEN_ACCOUNT = \"acquireToken.account\",\r\n    SESSION_STATE = \"session.state\",\r\n    REQUEST_STATE = \"request.state\",\r\n    NONCE_IDTOKEN = \"nonce.id_token\",\r\n    ORIGIN_URI = \"request.origin\",\r\n    RENEW_STATUS = \"token.renew.status\",\r\n    URL_HASH = \"urlHash\",\r\n    REQUEST_PARAMS = \"request.params\",\r\n    SCOPES = \"scopes\",\r\n    INTERACTION_STATUS_KEY = \"interaction.status\",\r\n    CCS_CREDENTIAL = \"ccs.credential\"\r\n}\r\n\r\n/**\r\n * API Codes for Telemetry purposes. \r\n * Before adding a new code you must claim it in the MSAL Telemetry tracker as these number spaces are shared across all MSALs\r\n * 0-99 Silent Flow\r\n * 800-899 Auth Code Flow\r\n */\r\nexport enum ApiId {\r\n    acquireTokenRedirect = 861,\r\n    acquireTokenPopup = 862,\r\n    ssoSilent = 863,\r\n    acquireTokenSilent_authCode = 864,\r\n    handleRedirectPromise = 865,\r\n    acquireTokenSilent_silentFlow = 61,\r\n    logout = 961,\r\n    logoutPopup = 962\r\n}\r\n\r\n/*\r\n * Interaction type of the API - used for state and telemetry\r\n */\r\nexport enum InteractionType {\r\n    Redirect = \"redirect\",\r\n    Popup = \"popup\",\r\n    Silent = \"silent\"\r\n}\r\n\r\n/**\r\n * Types of interaction currently in progress.\r\n * Used in events in wrapper libraries to invoke functions when certain interaction is in progress or all interactions are complete.\r\n */\r\nexport enum InteractionStatus {\r\n    /**\r\n     * Initial status before interaction occurs\r\n     */\r\n    Startup = \"startup\",\r\n    /**\r\n     * Status set when all login calls occuring\r\n     */\r\n    Login = \"login\",\r\n    /**\r\n     * Status set when logout call occuring\r\n     */ \r\n    Logout = \"logout\",\r\n    /**\r\n     * Status set for acquireToken calls\r\n     */\r\n    AcquireToken = \"acquireToken\",\r\n    /**\r\n     * Status set for ssoSilent calls\r\n     */\r\n    SsoSilent = \"ssoSilent\",\r\n    /**\r\n     * Status set when handleRedirect in progress\r\n     */\r\n    HandleRedirect = \"handleRedirect\",\r\n    /**\r\n     * Status set when interaction is complete\r\n     */\r\n    None = \"none\"\r\n}\r\n\r\nexport const DEFAULT_REQUEST: RedirectRequest|PopupRequest = {\r\n    scopes: OIDC_DEFAULT_SCOPES\r\n};\r\n\r\n/**\r\n * JWK Key Format string (Type MUST be defined for window crypto APIs)\r\n */\r\nexport const KEY_FORMAT_JWK = \"jwk\";\r\n\r\n// Supported wrapper SKUs\r\nexport enum WrapperSKU {\r\n    React = \"@azure/msal-react\",\r\n    Angular = \"@azure/msal-angular\"\r\n}\r\n"]},"metadata":{},"sourceType":"module"}