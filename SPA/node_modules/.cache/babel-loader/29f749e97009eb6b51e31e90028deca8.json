{"ast":null,"code":"/**\r\n * -------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\r\n * See License in the project root for license information.\r\n * -------------------------------------------------------------------------------------------\r\n */\n\n/**\r\n * @class\r\n * Class that handles BatchResponseContent\r\n */\nexport class BatchResponseContent {\n  /**\r\n   * @public\r\n   * @constructor\r\n   * Creates the BatchResponseContent instance\r\n   * @param {BatchResponseBody} response - The response body returned for batch request from server\r\n   * @returns An instance of a BatchResponseContent\r\n   */\n  constructor(response) {\n    this.responses = new Map();\n    this.update(response);\n  }\n  /**\r\n   * @private\r\n   * Creates native Response object from the json representation of it.\r\n   * @param {KeyValuePairObject} responseJSON - The response json value\r\n   * @returns The Response Object instance\r\n   */\n\n\n  createResponseObject(responseJSON) {\n    const body = responseJSON.body;\n    const options = {};\n    options.status = responseJSON.status;\n\n    if (responseJSON.statusText !== undefined) {\n      options.statusText = responseJSON.statusText;\n    }\n\n    options.headers = responseJSON.headers;\n\n    if (options.headers !== undefined && options.headers[\"Content-Type\"] !== undefined) {\n      if (options.headers[\"Content-Type\"].split(\";\")[0] === \"application/json\") {\n        const bodyString = JSON.stringify(body);\n        return new Response(bodyString, options);\n      }\n    }\n\n    return new Response(body, options);\n  }\n  /**\r\n   * @public\r\n   * Updates the Batch response content instance with given responses.\r\n   * @param {BatchResponseBody} response - The response json representing batch response message\r\n   * @returns Nothing\r\n   */\n\n\n  update(response) {\n    this.nextLink = response[\"@odata.nextLink\"];\n    const responses = response.responses;\n\n    for (let i = 0, l = responses.length; i < l; i++) {\n      this.responses.set(responses[i].id, this.createResponseObject(responses[i]));\n    }\n  }\n  /**\r\n   * @public\r\n   * To get the response of a request for a given request id\r\n   * @param {string} requestId - The request id value\r\n   * @returns The Response object instance for the particular request\r\n   */\n\n\n  getResponseById(requestId) {\n    return this.responses.get(requestId);\n  }\n  /**\r\n   * @public\r\n   * To get all the responses of the batch request\r\n   * @returns The Map of id and Response objects\r\n   */\n\n\n  getResponses() {\n    return this.responses;\n  }\n  /**\r\n   * @public\r\n   * To get the iterator for the responses\r\n   * @returns The Iterable generator for the response objects\r\n   */\n\n\n  *getResponsesIterator() {\n    const iterator = this.responses.entries();\n    let cur = iterator.next();\n\n    while (!cur.done) {\n      yield cur.value;\n      cur = iterator.next();\n    }\n  }\n\n}","map":{"version":3,"sources":["../../../src/content/BatchResponseContent.ts"],"names":[],"mappings":"AAAA;;;;;AAKG;;AAyBH;;;AAGG;AACH,OAAM,MAAO,oBAAP,CAA2B;AAWhC;;;;;;AAMG;AACH,EAAA,WAAA,CAAmB,QAAnB,EAA8C;AAC7C,SAAK,SAAL,GAAiB,IAAI,GAAJ,EAAjB;AACA,SAAK,MAAL,CAAY,QAAZ;AACA;AAED;;;;;AAKG;;;AACK,EAAA,oBAAoB,CAAC,YAAD,EAAiC;AAC5D,UAAM,IAAI,GAAG,YAAY,CAAC,IAA1B;AACA,UAAM,OAAO,GAAuB,EAApC;AACA,IAAA,OAAO,CAAC,MAAR,GAAiB,YAAY,CAAC,MAA9B;;AACA,QAAI,YAAY,CAAC,UAAb,KAA4B,SAAhC,EAA2C;AAC1C,MAAA,OAAO,CAAC,UAAR,GAAqB,YAAY,CAAC,UAAlC;AACA;;AACD,IAAA,OAAO,CAAC,OAAR,GAAkB,YAAY,CAAC,OAA/B;;AACA,QAAI,OAAO,CAAC,OAAR,KAAoB,SAApB,IAAiC,OAAO,CAAC,OAAR,CAAgB,cAAhB,MAAoC,SAAzE,EAAoF;AACnF,UAAI,OAAO,CAAC,OAAR,CAAgB,cAAhB,EAAgC,KAAhC,CAAsC,GAAtC,EAA2C,CAA3C,MAAkD,kBAAtD,EAA0E;AACzE,cAAM,UAAU,GAAG,IAAI,CAAC,SAAL,CAAe,IAAf,CAAnB;AACA,eAAO,IAAI,QAAJ,CAAa,UAAb,EAAyB,OAAzB,CAAP;AACA;AACD;;AACD,WAAO,IAAI,QAAJ,CAAa,IAAb,EAAmB,OAAnB,CAAP;AACA;AAED;;;;;AAKG;;;AACI,EAAA,MAAM,CAAC,QAAD,EAA4B;AACxC,SAAK,QAAL,GAAgB,QAAQ,CAAC,iBAAD,CAAxB;AACA,UAAM,SAAS,GAAG,QAAQ,CAAC,SAA3B;;AACA,SAAK,IAAI,CAAC,GAAG,CAAR,EAAW,CAAC,GAAG,SAAS,CAAC,MAA9B,EAAsC,CAAC,GAAG,CAA1C,EAA6C,CAAC,EAA9C,EAAkD;AACjD,WAAK,SAAL,CAAe,GAAf,CAAmB,SAAS,CAAC,CAAD,CAAT,CAAa,EAAhC,EAAoC,KAAK,oBAAL,CAA0B,SAAS,CAAC,CAAD,CAAnC,CAApC;AACA;AACD;AAED;;;;;AAKG;;;AACI,EAAA,eAAe,CAAC,SAAD,EAAkB;AACvC,WAAO,KAAK,SAAL,CAAe,GAAf,CAAmB,SAAnB,CAAP;AACA;AAED;;;;AAIG;;;AACI,EAAA,YAAY,GAAA;AAClB,WAAO,KAAK,SAAZ;AACA;AAED;;;;AAIG;;;AACyB,GAApB,oBAAoB,GAAA;AAC3B,UAAM,QAAQ,GAAG,KAAK,SAAL,CAAe,OAAf,EAAjB;AACA,QAAI,GAAG,GAAG,QAAQ,CAAC,IAAT,EAAV;;AACA,WAAO,CAAC,GAAG,CAAC,IAAZ,EAAkB;AACjB,YAAM,GAAG,CAAC,KAAV;AACA,MAAA,GAAG,GAAG,QAAQ,CAAC,IAAT,EAAN;AACA;AACD;;AA3F+B","sourceRoot":"","sourcesContent":["/**\r\n * -------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\r\n * See License in the project root for license information.\r\n * -------------------------------------------------------------------------------------------\r\n */\r\n/**\r\n * @class\r\n * Class that handles BatchResponseContent\r\n */\r\nexport class BatchResponseContent {\r\n    /**\r\n     * @public\r\n     * @constructor\r\n     * Creates the BatchResponseContent instance\r\n     * @param {BatchResponseBody} response - The response body returned for batch request from server\r\n     * @returns An instance of a BatchResponseContent\r\n     */\r\n    constructor(response) {\r\n        this.responses = new Map();\r\n        this.update(response);\r\n    }\r\n    /**\r\n     * @private\r\n     * Creates native Response object from the json representation of it.\r\n     * @param {KeyValuePairObject} responseJSON - The response json value\r\n     * @returns The Response Object instance\r\n     */\r\n    createResponseObject(responseJSON) {\r\n        const body = responseJSON.body;\r\n        const options = {};\r\n        options.status = responseJSON.status;\r\n        if (responseJSON.statusText !== undefined) {\r\n            options.statusText = responseJSON.statusText;\r\n        }\r\n        options.headers = responseJSON.headers;\r\n        if (options.headers !== undefined && options.headers[\"Content-Type\"] !== undefined) {\r\n            if (options.headers[\"Content-Type\"].split(\";\")[0] === \"application/json\") {\r\n                const bodyString = JSON.stringify(body);\r\n                return new Response(bodyString, options);\r\n            }\r\n        }\r\n        return new Response(body, options);\r\n    }\r\n    /**\r\n     * @public\r\n     * Updates the Batch response content instance with given responses.\r\n     * @param {BatchResponseBody} response - The response json representing batch response message\r\n     * @returns Nothing\r\n     */\r\n    update(response) {\r\n        this.nextLink = response[\"@odata.nextLink\"];\r\n        const responses = response.responses;\r\n        for (let i = 0, l = responses.length; i < l; i++) {\r\n            this.responses.set(responses[i].id, this.createResponseObject(responses[i]));\r\n        }\r\n    }\r\n    /**\r\n     * @public\r\n     * To get the response of a request for a given request id\r\n     * @param {string} requestId - The request id value\r\n     * @returns The Response object instance for the particular request\r\n     */\r\n    getResponseById(requestId) {\r\n        return this.responses.get(requestId);\r\n    }\r\n    /**\r\n     * @public\r\n     * To get all the responses of the batch request\r\n     * @returns The Map of id and Response objects\r\n     */\r\n    getResponses() {\r\n        return this.responses;\r\n    }\r\n    /**\r\n     * @public\r\n     * To get the iterator for the responses\r\n     * @returns The Iterable generator for the response objects\r\n     */\r\n    *getResponsesIterator() {\r\n        const iterator = this.responses.entries();\r\n        let cur = iterator.next();\r\n        while (!cur.done) {\r\n            yield cur.value;\r\n            cur = iterator.next();\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=BatchResponseContent.js.map"]},"metadata":{},"sourceType":"module"}