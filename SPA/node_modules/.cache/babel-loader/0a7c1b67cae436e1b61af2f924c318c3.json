{"ast":null,"code":"/**\r\n * -------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\r\n * See License in the project root for license information.\r\n * -------------------------------------------------------------------------------------------\r\n */\nimport * as tslib_1 from \"tslib\";\n/**\r\n * @class\r\n * Class representing CustomAuthenticationProvider\r\n * @extends AuthenticationProvider\r\n */\n\nexport class CustomAuthenticationProvider {\n  /**\r\n   * @public\r\n   * @constructor\r\n   * Creates an instance of CustomAuthenticationProvider\r\n   * @param {AuthProviderCallback} provider - An authProvider function\r\n   * @returns An instance of CustomAuthenticationProvider\r\n   */\n  constructor(provider) {\n    this.provider = provider;\n  }\n  /**\r\n   * @public\r\n   * @async\r\n   * To get the access token\r\n   * @returns The promise that resolves to an access token\r\n   */\n\n\n  getAccessToken() {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n      return new Promise((resolve, reject) => {\n        this.provider((error, accessToken) => {\n          if (accessToken) {\n            resolve(accessToken);\n          } else {\n            reject(error);\n          }\n        });\n      });\n    });\n  }\n\n}","map":{"version":3,"sources":["../../src/CustomAuthenticationProvider.ts"],"names":[],"mappings":"AAAA;;;;;AAKG;;AASH;;;;AAIG;;AACH,OAAM,MAAO,4BAAP,CAAmC;AAOxC;;;;;;AAMG;AACH,EAAA,WAAA,CAAmB,QAAnB,EAAyC;AACxC,SAAK,QAAL,GAAgB,QAAhB;AACA;AAED;;;;;AAKG;;;AACU,EAAA,cAAc,GAAA;;AAC1B,aAAO,IAAI,OAAJ,CAAY,CAAC,OAAD,EAAyC,MAAzC,KAAyE;AAC3F,aAAK,QAAL,CAAc,CAAC,KAAD,EAAa,WAAb,KAA2C;AACxD,cAAI,WAAJ,EAAiB;AAChB,YAAA,OAAO,CAAC,WAAD,CAAP;AACA,WAFD,MAEO;AACN,YAAA,MAAM,CAAC,KAAD,CAAN;AACA;AACD,SAND;AAOA,OARM,CAAP;AASA,K;AAAA;;AAlCuC","sourceRoot":"","sourcesContent":["/**\r\n * -------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\r\n * See License in the project root for license information.\r\n * -------------------------------------------------------------------------------------------\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * @class\r\n * Class representing CustomAuthenticationProvider\r\n * @extends AuthenticationProvider\r\n */\r\nexport class CustomAuthenticationProvider {\r\n    /**\r\n     * @public\r\n     * @constructor\r\n     * Creates an instance of CustomAuthenticationProvider\r\n     * @param {AuthProviderCallback} provider - An authProvider function\r\n     * @returns An instance of CustomAuthenticationProvider\r\n     */\r\n    constructor(provider) {\r\n        this.provider = provider;\r\n    }\r\n    /**\r\n     * @public\r\n     * @async\r\n     * To get the access token\r\n     * @returns The promise that resolves to an access token\r\n     */\r\n    getAccessToken() {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\r\n            return new Promise((resolve, reject) => {\r\n                this.provider((error, accessToken) => {\r\n                    if (accessToken) {\r\n                        resolve(accessToken);\r\n                    }\r\n                    else {\r\n                        reject(error);\r\n                    }\r\n                });\r\n            });\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=CustomAuthenticationProvider.js.map"]},"metadata":{},"sourceType":"module"}