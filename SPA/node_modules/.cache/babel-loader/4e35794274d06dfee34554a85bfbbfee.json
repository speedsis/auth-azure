{"ast":null,"code":"/*! @azure/msal-common v4.5.0 2021-07-22 */\n'use strict';\n\nimport { ThrottlingConstants } from '../../utils/Constants.js';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\nvar ThrottlingEntity = function () {\n  function ThrottlingEntity() {}\n  /**\r\n   * validates if a given cache entry is \"Throttling\", parses <key,value>\r\n   * @param key\r\n   * @param entity\r\n   */\n\n\n  ThrottlingEntity.isThrottlingEntity = function (key, entity) {\n    var validateKey = false;\n\n    if (key) {\n      validateKey = key.indexOf(ThrottlingConstants.THROTTLING_PREFIX) === 0;\n    }\n\n    var validateEntity = true;\n\n    if (entity) {\n      validateEntity = entity.hasOwnProperty(\"throttleTime\");\n    }\n\n    return validateKey && validateEntity;\n  };\n\n  return ThrottlingEntity;\n}();\n\nexport { ThrottlingEntity };","map":{"version":3,"sources":["../../../src/cache/entities/ThrottlingEntity.ts"],"names":[],"mappings":";;;;AAAA;;;;;;AAOA,WAAA,gBAAA,GAAA,CA4BC;;;;;;;;AAdU,EAAA,gBAAA,CAAA,kBAAA,GAAP,UAA0B,GAA1B,EAAuC,MAAvC,EAAsD;AAElD,QAAI,WAAW,GAAY,KAA3B;;AACA,QAAI,GAAJ,EAAS;AACL,MAAA,WAAW,GAAG,GAAG,CAAC,OAAJ,CAAY,mBAAmB,CAAC,iBAAhC,MAAuD,CAArE;AACH;;AAED,QAAI,cAAc,GAAY,IAA9B;;AACA,QAAI,MAAJ,EAAY;AACR,MAAA,cAAc,GAAG,MAAM,CAAC,cAAP,CAAsB,cAAtB,CAAjB;AACH;;AAED,WAAO,WAAW,IAAI,cAAtB;AACH,GAbM;;AAcX,SAAA,gBAAA;AAAC,C","sourcesContent":["/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { ThrottlingConstants } from \"../../utils/Constants\";\r\n\r\nexport class ThrottlingEntity {\r\n    // Unix-time value representing the expiration of the throttle\r\n    throttleTime: number;\r\n    // Information provided by the server\r\n    error?: string;\r\n    errorCodes?: Array<string>;\r\n    errorMessage?: string;\r\n    subError?: string;\r\n\r\n    /**\r\n     * validates if a given cache entry is \"Throttling\", parses <key,value>\r\n     * @param key\r\n     * @param entity\r\n     */\r\n    static isThrottlingEntity(key: string, entity?: object): boolean {\r\n        \r\n        let validateKey: boolean = false;\r\n        if (key) {\r\n            validateKey = key.indexOf(ThrottlingConstants.THROTTLING_PREFIX) === 0;\r\n        }\r\n        \r\n        let validateEntity: boolean = true;\r\n        if (entity) {\r\n            validateEntity = entity.hasOwnProperty(\"throttleTime\");\r\n        }\r\n\r\n        return validateKey && validateEntity;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}