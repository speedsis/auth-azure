{"ast":null,"code":"/*! @azure/msal-common v4.5.0 2021-07-22 */\n'use strict';\n\nimport { __extends } from '../_virtual/_tslib.js';\nimport { ServerError as ServerError$1 } from './ServerError.js';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\n/**\r\n * InteractionRequiredAuthErrorMessage class containing string constants used by error codes and messages.\r\n */\n\nvar InteractionRequiredAuthErrorMessage = [\"interaction_required\", \"consent_required\", \"login_required\"];\nvar InteractionRequiredAuthSubErrorMessage = [\"message_only\", \"additional_action\", \"basic_action\", \"user_password_expired\", \"consent_required\"];\n/**\r\n * Error thrown when user interaction is required at the auth server.\r\n */\n\nvar InteractionRequiredAuthError = function (_super) {\n  __extends(InteractionRequiredAuthError, _super);\n\n  function InteractionRequiredAuthError(errorCode, errorMessage, subError) {\n    var _this = _super.call(this, errorCode, errorMessage, subError) || this;\n\n    _this.name = \"InteractionRequiredAuthError\";\n    Object.setPrototypeOf(_this, InteractionRequiredAuthError.prototype);\n    return _this;\n  }\n\n  InteractionRequiredAuthError.isInteractionRequiredError = function (errorCode, errorString, subError) {\n    var isInteractionRequiredErrorCode = !!errorCode && InteractionRequiredAuthErrorMessage.indexOf(errorCode) > -1;\n    var isInteractionRequiredSubError = !!subError && InteractionRequiredAuthSubErrorMessage.indexOf(subError) > -1;\n    var isInteractionRequiredErrorDesc = !!errorString && InteractionRequiredAuthErrorMessage.some(function (irErrorCode) {\n      return errorString.indexOf(irErrorCode) > -1;\n    });\n    return isInteractionRequiredErrorCode || isInteractionRequiredErrorDesc || isInteractionRequiredSubError;\n  };\n\n  return InteractionRequiredAuthError;\n}(ServerError$1);\n\nexport { InteractionRequiredAuthError, InteractionRequiredAuthErrorMessage, InteractionRequiredAuthSubErrorMessage };","map":{"version":3,"sources":["../../src/error/InteractionRequiredAuthError.ts"],"names":["ServerError"],"mappings":";;;;;AAAA;;;;;AAOA;;;;IAGa,mCAAmC,GAAG,CAC/C,sBAD+C,EAE/C,kBAF+C,EAG/C,gBAH+C,C;IAMtC,sCAAsC,GAAG,CAClD,cADkD,EAElD,mBAFkD,EAGlD,cAHkD,EAIlD,uBAJkD,EAKlD,kBALkD,C;AAQtD;;;;;AAGkDA,EAAAA,SAAAA,CAAAA,4BAAAA,EAAAA,MAAAA,CAAAA;;AAE9C,WAAA,4BAAA,CAAY,SAAZ,EAAgC,YAAhC,EAAuD,QAAvD,EAAwE;AAAxE,QAAA,KAAA,GACI,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,SAAN,EAAiB,YAAjB,EAA+B,QAA/B,KAAwC,IAD5C;;AAEI,IAAA,KAAI,CAAC,IAAL,GAAY,8BAAZ;AAEA,IAAA,MAAM,CAAC,cAAP,CAAsB,KAAtB,EAA4B,4BAA4B,CAAC,SAAzD;;AACH;;AAEM,EAAA,4BAAA,CAAA,0BAAA,GAAP,UAAkC,SAAlC,EAAsD,WAAtD,EAA4E,QAA5E,EAA6F;AACzF,QAAM,8BAA8B,GAAG,CAAC,CAAC,SAAF,IAAe,mCAAmC,CAAC,OAApC,CAA4C,SAA5C,IAAyD,CAAC,CAAhH;AACA,QAAM,6BAA6B,GAAG,CAAC,CAAC,QAAF,IAAc,sCAAsC,CAAC,OAAvC,CAA+C,QAA/C,IAA2D,CAAC,CAAhH;AACA,QAAM,8BAA8B,GAAG,CAAC,CAAC,WAAF,IAAiB,mCAAmC,CAAC,IAApC,CAAyC,UAAC,WAAD,EAAY;AACzG,aAAO,WAAW,CAAC,OAAZ,CAAoB,WAApB,IAAmC,CAAC,CAA3C;AACH,KAFuD,CAAxD;AAIA,WAAO,8BAA8B,IAAI,8BAAlC,IAAoE,6BAA3E;AACH,GARM;;AASX,SAAA,4BAAA;AAlBA,C,CAAkDA,a","sourcesContent":["/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { ServerError } from \"./ServerError\";\r\n\r\n/**\r\n * InteractionRequiredAuthErrorMessage class containing string constants used by error codes and messages.\r\n */\r\nexport const InteractionRequiredAuthErrorMessage = [\r\n    \"interaction_required\",\r\n    \"consent_required\",\r\n    \"login_required\"\r\n];\r\n\r\nexport const InteractionRequiredAuthSubErrorMessage = [\r\n    \"message_only\",\r\n    \"additional_action\",\r\n    \"basic_action\",\r\n    \"user_password_expired\",\r\n    \"consent_required\"\r\n];\r\n\r\n/**\r\n * Error thrown when user interaction is required at the auth server.\r\n */\r\nexport class InteractionRequiredAuthError extends ServerError {\r\n\r\n    constructor(errorCode?: string, errorMessage?: string, subError?: string) {\r\n        super(errorCode, errorMessage, subError);\r\n        this.name = \"InteractionRequiredAuthError\";\r\n\r\n        Object.setPrototypeOf(this, InteractionRequiredAuthError.prototype);\r\n    }\r\n\r\n    static isInteractionRequiredError(errorCode?: string, errorString?: string, subError?: string) : boolean {\r\n        const isInteractionRequiredErrorCode = !!errorCode && InteractionRequiredAuthErrorMessage.indexOf(errorCode) > -1;\r\n        const isInteractionRequiredSubError = !!subError && InteractionRequiredAuthSubErrorMessage.indexOf(subError) > -1;\r\n        const isInteractionRequiredErrorDesc = !!errorString && InteractionRequiredAuthErrorMessage.some((irErrorCode) => {\r\n            return errorString.indexOf(irErrorCode) > -1;\r\n        });\r\n\r\n        return isInteractionRequiredErrorCode || isInteractionRequiredErrorDesc || isInteractionRequiredSubError;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}