{"ast":null,"code":"var _jsxFileName = \"/Users/speedsis/Downloads/ms-identity-javascript-react-tutorial-main/2-Authorization-I/1-call-graph/SPA/src/components/NavigationBar.jsx\",\n    _s = $RefreshSig$();\n\nimport { AuthenticatedTemplate, UnauthenticatedTemplate, useMsal } from \"@azure/msal-react\";\nimport { Nav, Navbar, Button, Dropdown, DropdownButton } from \"react-bootstrap\";\nimport { loginRequest } from \"../authConfig\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const NavigationBar = () => {\n  _s();\n\n  const {\n    instance\n  } = useMsal();\n\n  const handleLogin = () => {\n    instance.loginPopup(loginRequest).catch(error => console.log(error));\n  };\n  /**\n   * Most applications will need to conditionally render certain components based on whether a user is signed in or not. \n   * msal-react provides 2 easy ways to do this. AuthenticatedTemplate and UnauthenticatedTemplate components will \n   * only render their children if a user is authenticated or unauthenticated, respectively.\n   */\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Navbar, {\n      bg: \"primary\",\n      variant: \"dark\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"navbar-brand\",\n        href: \"/\",\n        children: \"Microsoft identity platform\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AuthenticatedTemplate, {\n        children: [/*#__PURE__*/_jsxDEV(Nav.Link, {\n          as: Button,\n          href: \"/profile\",\n          children: \"Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Nav.Link, {\n          as: Button,\n          href: \"/mails\",\n          children: \"Mails\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Nav.Link, {\n          as: Button,\n          href: \"/tenant\",\n          children: \"Tenant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DropdownButton, {\n          variant: \"warning\",\n          className: \"ml-auto\",\n          drop: \"left\",\n          title: \"Sign Out\",\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            as: \"button\",\n            onClick: () => instance.logoutPopup({\n              postLogoutRedirectUri: \"/\",\n              mainWindowRedirectUri: \"/\"\n            }),\n            children: \"Sign out using Popup\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            as: \"button\",\n            onClick: () => instance.logoutRedirect({\n              postLogoutRedirectUri: \"/\"\n            }),\n            children: \"Sign out using Redirect\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(UnauthenticatedTemplate, {\n        children: /*#__PURE__*/_jsxDEV(DropdownButton, {\n          variant: \"secondary\",\n          className: \"ml-auto\",\n          drop: \"left\",\n          title: \"Sign In\",\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            as: \"button\",\n            onClick: handleLogin,\n            children: \"Sign in using Popup\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            as: \"button\",\n            onClick: () => instance.loginRedirect(loginRequest),\n            children: \"Sign in using Redirect\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(NavigationBar, \"kNmaupTUyOO55c/HFAYpHUXUX7Y=\", false, function () {\n  return [useMsal];\n});\n\n_c = NavigationBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavigationBar\");","map":{"version":3,"sources":["/Users/speedsis/Downloads/ms-identity-javascript-react-tutorial-main/2-Authorization-I/1-call-graph/SPA/src/components/NavigationBar.jsx"],"names":["AuthenticatedTemplate","UnauthenticatedTemplate","useMsal","Nav","Navbar","Button","Dropdown","DropdownButton","loginRequest","NavigationBar","instance","handleLogin","loginPopup","catch","error","console","log","logoutPopup","postLogoutRedirectUri","mainWindowRedirectUri","logoutRedirect","loginRedirect"],"mappings":"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","sourcesContent":["import { AuthenticatedTemplate, UnauthenticatedTemplate, useMsal } from \"@azure/msal-react\";\n\nimport { Nav, Navbar, Button, Dropdown, DropdownButton} from \"react-bootstrap\";\n\nimport { loginRequest } from \"../authConfig\";\n\nexport const NavigationBar = () => {\n\n    const { instance } = useMsal();\n\n    const handleLogin = () => {\n        instance.loginPopup(loginRequest)\n            .catch((error) => console.log(error))\n    }\n    \n\n    /**\n     * Most applications will need to conditionally render certain components based on whether a user is signed in or not. \n     * msal-react provides 2 easy ways to do this. AuthenticatedTemplate and UnauthenticatedTemplate components will \n     * only render their children if a user is authenticated or unauthenticated, respectively.\n     */\n    return (\n        <>\n            <Navbar bg=\"primary\" variant=\"dark\">\n                <a className=\"navbar-brand\" href=\"/\">Microsoft identity platform</a>\n                <AuthenticatedTemplate>\n                    <Nav.Link as={Button} href=\"/profile\">Profile</Nav.Link>\n                    <Nav.Link as={Button} href=\"/mails\">Mails</Nav.Link>\n                    <Nav.Link as={Button} href=\"/tenant\">Tenant</Nav.Link>\n                    <DropdownButton variant=\"warning\" className=\"ml-auto\" drop=\"left\" title=\"Sign Out\">\n                        <Dropdown.Item as=\"button\" onClick={() => instance.logoutPopup({ postLogoutRedirectUri: \"/\", mainWindowRedirectUri: \"/\" })}>Sign out using Popup</Dropdown.Item>\n                        <Dropdown.Item as=\"button\" onClick={() => instance.logoutRedirect({ postLogoutRedirectUri: \"/\" })}>Sign out using Redirect</Dropdown.Item>\n                    </DropdownButton>\n                </AuthenticatedTemplate>\n                <UnauthenticatedTemplate>\n                    <DropdownButton variant=\"secondary\" className=\"ml-auto\" drop=\"left\" title=\"Sign In\">\n                        <Dropdown.Item as=\"button\" onClick={handleLogin}>Sign in using Popup</Dropdown.Item>\n                        <Dropdown.Item as=\"button\" onClick={() => instance.loginRedirect(loginRequest)}>Sign in using Redirect</Dropdown.Item>\n                    </DropdownButton>\n                </UnauthenticatedTemplate>\n            </Navbar>\n        </>\n    );\n};"]},"metadata":{},"sourceType":"module"}