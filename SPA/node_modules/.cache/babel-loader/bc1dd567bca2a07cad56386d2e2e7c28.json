{"ast":null,"code":"/**\r\n * -------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\r\n * See License in the project root for license information.\r\n * -------------------------------------------------------------------------------------------\r\n */\n\n/**\r\n * @constant\r\n * @function\r\n * Validates availability of Promise and fetch in global context\r\n * @returns The true in case the Promise and fetch available, otherwise throws error\r\n */\nexport const validatePolyFilling = () => {\n  if (typeof Promise === \"undefined\" && typeof fetch === \"undefined\") {\n    const error = new Error(\"Library cannot function without Promise and fetch. So, please provide polyfill for them.\");\n    error.name = \"PolyFillNotAvailable\";\n    throw error;\n  } else if (typeof Promise === \"undefined\") {\n    const error = new Error(\"Library cannot function without Promise. So, please provide polyfill for it.\");\n    error.name = \"PolyFillNotAvailable\";\n    throw error;\n  } else if (typeof fetch === \"undefined\") {\n    const error = new Error(\"Library cannot function without fetch. So, please provide polyfill for it.\");\n    error.name = \"PolyFillNotAvailable\";\n    throw error;\n  }\n\n  return true;\n};","map":{"version":3,"sources":["../../src/ValidatePolyFilling.ts"],"names":[],"mappings":"AAAA;;;;;AAKG;;AAEH;;;;;AAKG;AAEH,OAAO,MAAM,mBAAmB,GAAG,MAAc;AAChD,MAAI,OAAO,OAAP,KAAmB,WAAnB,IAAkC,OAAO,KAAP,KAAiB,WAAvD,EAAoE;AACnE,UAAM,KAAK,GAAG,IAAI,KAAJ,CAAU,0FAAV,CAAd;AACA,IAAA,KAAK,CAAC,IAAN,GAAa,sBAAb;AACA,UAAM,KAAN;AACA,GAJD,MAIO,IAAI,OAAO,OAAP,KAAmB,WAAvB,EAAoC;AAC1C,UAAM,KAAK,GAAG,IAAI,KAAJ,CAAU,8EAAV,CAAd;AACA,IAAA,KAAK,CAAC,IAAN,GAAa,sBAAb;AACA,UAAM,KAAN;AACA,GAJM,MAIA,IAAI,OAAO,KAAP,KAAiB,WAArB,EAAkC;AACxC,UAAM,KAAK,GAAG,IAAI,KAAJ,CAAU,4EAAV,CAAd;AACA,IAAA,KAAK,CAAC,IAAN,GAAa,sBAAb;AACA,UAAM,KAAN;AACA;;AACD,SAAO,IAAP;AACA,CAfM","sourceRoot":"","sourcesContent":["/**\r\n * -------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\r\n * See License in the project root for license information.\r\n * -------------------------------------------------------------------------------------------\r\n */\r\n/**\r\n * @constant\r\n * @function\r\n * Validates availability of Promise and fetch in global context\r\n * @returns The true in case the Promise and fetch available, otherwise throws error\r\n */\r\nexport const validatePolyFilling = () => {\r\n    if (typeof Promise === \"undefined\" && typeof fetch === \"undefined\") {\r\n        const error = new Error(\"Library cannot function without Promise and fetch. So, please provide polyfill for them.\");\r\n        error.name = \"PolyFillNotAvailable\";\r\n        throw error;\r\n    }\r\n    else if (typeof Promise === \"undefined\") {\r\n        const error = new Error(\"Library cannot function without Promise. So, please provide polyfill for it.\");\r\n        error.name = \"PolyFillNotAvailable\";\r\n        throw error;\r\n    }\r\n    else if (typeof fetch === \"undefined\") {\r\n        const error = new Error(\"Library cannot function without fetch. So, please provide polyfill for it.\");\r\n        error.name = \"PolyFillNotAvailable\";\r\n        throw error;\r\n    }\r\n    return true;\r\n};\r\n//# sourceMappingURL=ValidatePolyFilling.js.map"]},"metadata":{},"sourceType":"module"}