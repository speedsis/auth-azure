{"ast":null,"code":"/*! @azure/msal-common v4.5.0 2021-07-22 */\n'use strict';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\n/**\r\n * This class instance helps track the memory changes facilitating\r\n * decisions to read from and write to the persistent cache\r\n */\n\nvar TokenCacheContext = function () {\n  function TokenCacheContext(tokenCache, hasChanged) {\n    this.cache = tokenCache;\n    this.hasChanged = hasChanged;\n  }\n\n  Object.defineProperty(TokenCacheContext.prototype, \"cacheHasChanged\", {\n    /**\r\n     * boolean which indicates the changes in cache\r\n     */\n    get: function () {\n      return this.hasChanged;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TokenCacheContext.prototype, \"tokenCache\", {\n    /**\r\n     * function to retrieve the token cache\r\n     */\n    get: function () {\n      return this.cache;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return TokenCacheContext;\n}();\n\nexport { TokenCacheContext };","map":{"version":3,"sources":["../../../src/cache/persistence/TokenCacheContext.ts"],"names":[],"mappings":";;AAAA;;;;;AAOA;;;;;;AAaI,WAAA,iBAAA,CAAY,UAAZ,EAAiD,UAAjD,EAAoE;AAChE,SAAK,KAAL,GAAa,UAAb;AACA,SAAK,UAAL,GAAkB,UAAlB;AACH;;AAKD,EAAA,MAAA,CAAA,cAAA,CAAI,iBAAA,CAAA,SAAJ,EAAI,iBAAJ,EAAmB;;;;SAAnB,YAAA;AACI,aAAO,KAAK,UAAZ;AACH,KAFkB;oBAAA;;AAAA,GAAnB;AAOA,EAAA,MAAA,CAAA,cAAA,CAAI,iBAAA,CAAA,SAAJ,EAAI,YAAJ,EAAc;;;;SAAd,YAAA;AACI,aAAO,KAAK,KAAZ;AACH,KAFa;oBAAA;;AAAA,GAAd;AAGJ,SAAA,iBAAA;AAAC,C","sourcesContent":["/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { ISerializableTokenCache } from \"../interface/ISerializableTokenCache\";\r\n\r\n/**\r\n * This class instance helps track the memory changes facilitating\r\n * decisions to read from and write to the persistent cache\r\n */export class TokenCacheContext {\r\n    /**\r\n     * boolean indicating cache change\r\n     */\r\n    hasChanged: boolean;\r\n    /**\r\n     * serializable token cache interface\r\n     */\r\n    cache: ISerializableTokenCache;\r\n\r\n    constructor(tokenCache: ISerializableTokenCache, hasChanged: boolean) {\r\n        this.cache = tokenCache;\r\n        this.hasChanged = hasChanged;\r\n    }\r\n\r\n    /**\r\n     * boolean which indicates the changes in cache\r\n     */\r\n    get cacheHasChanged(): boolean {\r\n        return this.hasChanged;\r\n    }\r\n\r\n    /**\r\n     * function to retrieve the token cache\r\n     */\r\n    get tokenCache(): ISerializableTokenCache {\r\n        return this.cache;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}