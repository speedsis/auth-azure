{"ast":null,"code":"var _jsxFileName = \"/Users/speedsis/Downloads/ms-identity-javascript-react-tutorial-main/2-Authorization-I/1-call-graph/SPA/src/pages/Profile.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { MsalAuthenticationTemplate, useMsal, useAccount } from \"@azure/msal-react\";\nimport { InteractionType } from \"@azure/msal-browser\";\nimport { loginRequest } from \"../authConfig\";\nimport { ProfileData } from \"../components/DataDisplay\";\nimport { getGraphClient } from \"../graph\";\nimport { protectedResources } from \"../authConfig\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProfileContent = () => {\n  _s();\n\n  /**\n   * useMsal is hook that returns the PublicClientApplication instance, \n   * an array of all accounts currently signed in and an inProgress value \n   * that tells you what msal is currently doing. For more, visit: \n   * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-react/docs/hooks.md\n   */\n  const {\n    instance,\n    accounts,\n    inProgress\n  } = useMsal();\n  const account = useAccount(accounts[0] || {});\n  const [graphData, setGraphData] = useState(null);\n  useEffect(() => {\n    if (account && inProgress === \"none\" && !graphData) {\n      getGraphClient({\n        account: instance.getActiveAccount(),\n        scopes: protectedResources.graphMe.scopes,\n        interactionType: InteractionType.Popup\n      }).api(\"/me\").get().then(response => setGraphData(response)).catch(error => console.log(error));\n    }\n  }, [account, inProgress, instance]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: graphData ? /*#__PURE__*/_jsxDEV(ProfileData, {\n      graphData: graphData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 27\n    }, this) : null\n  }, void 0, false);\n};\n/**\n * The `MsalAuthenticationTemplate` component will render its children if a user is authenticated \n * or attempt to sign a user in. Just provide it with the interaction type you would like to use \n * (redirect or popup) and optionally a [request object](https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-browser/docs/request-response-object.md)\n * to be passed to the login API, a component to display while authentication is in progress or a component to display if an error occurs. For more, visit:\n * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-react/docs/getting-started.md\n */\n\n\n_s(ProfileContent, \"hcTocCZRMJ9dEHQkQ0nj0QkZ1G4=\", false, function () {\n  return [useMsal, useAccount];\n});\n\n_c = ProfileContent;\nexport const Profile = () => {\n  const authRequest = { ...loginRequest\n  };\n  return /*#__PURE__*/_jsxDEV(MsalAuthenticationTemplate, {\n    interactionType: InteractionType.Popup,\n    authenticationRequest: authRequest,\n    children: /*#__PURE__*/_jsxDEV(ProfileContent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_c2 = Profile;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ProfileContent\");\n$RefreshReg$(_c2, \"Profile\");","map":{"version":3,"sources":["/Users/speedsis/Downloads/ms-identity-javascript-react-tutorial-main/2-Authorization-I/1-call-graph/SPA/src/pages/Profile.jsx"],"names":["useEffect","useState","MsalAuthenticationTemplate","useMsal","useAccount","InteractionType","loginRequest","ProfileData","getGraphClient","protectedResources","ProfileContent","instance","accounts","inProgress","account","graphData","setGraphData","getActiveAccount","scopes","graphMe","interactionType","Popup","api","get","then","response","catch","error","console","log","Profile","authRequest"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,SAASC,0BAAT,EAAqCC,OAArC,EAA8CC,UAA9C,QAAgE,mBAAhE;AACA,SAASC,eAAT,QAAgC,qBAAhC;AAEA,SAASC,YAAT,QAA6B,eAA7B;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,SAASC,cAAT,QAA+B,UAA/B;AACA,SAASC,kBAAT,QAAmC,eAAnC;;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AACzB;AACJ;AACA;AACA;AACA;AACA;AACI,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,QAAZ;AAAsBC,IAAAA;AAAtB,MAAqCV,OAAO,EAAlD;AACA,QAAMW,OAAO,GAAGV,UAAU,CAACQ,QAAQ,CAAC,CAAD,CAAR,IAAe,EAAhB,CAA1B;AACA,QAAM,CAACG,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAC,IAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIc,OAAO,IAAID,UAAU,KAAK,MAA1B,IAAoC,CAACE,SAAzC,EAAoD;AAChDP,MAAAA,cAAc,CAAC;AACXM,QAAAA,OAAO,EAAEH,QAAQ,CAACM,gBAAT,EADE;AAEXC,QAAAA,MAAM,EAAET,kBAAkB,CAACU,OAAnB,CAA2BD,MAFxB;AAGXE,QAAAA,eAAe,EAAEf,eAAe,CAACgB;AAHtB,OAAD,CAAd,CAIGC,GAJH,CAIO,KAJP,EAIcC,GAJd,GAKSC,IALT,CAKeC,QAAD,IAAcT,YAAY,CAACS,QAAD,CALxC,EAMSC,KANT,CAMgBC,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAN1B;AAOH;AACJ,GAVQ,EAUN,CAACb,OAAD,EAAUD,UAAV,EAAsBF,QAAtB,CAVM,CAAT;AAYA,sBACI;AAAA,cACMI,SAAS,gBAAG,QAAC,WAAD;AAAa,MAAA,SAAS,EAAEA;AAAxB;AAAA;AAAA;AAAA;AAAA,YAAH,GAA2C;AAD1D,mBADJ;AAKH,CA5BD;AA8BA;AACA;AACA;AACA;AACA;AACA;AACA;;;GApCML,c;UAOyCP,O,EAC3BC,U;;;KARdM,c;AAqCN,OAAO,MAAMoB,OAAO,GAAG,MAAM;AACzB,QAAMC,WAAW,GAAG,EAChB,GAAGzB;AADa,GAApB;AAIA,sBACI,QAAC,0BAAD;AACI,IAAA,eAAe,EAAED,eAAe,CAACgB,KADrC;AAEI,IAAA,qBAAqB,EAAEU,WAF3B;AAAA,2BAII,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAbM;MAAMD,O","sourcesContent":["import { useEffect, useState } from \"react\";\n\nimport { MsalAuthenticationTemplate, useMsal, useAccount } from \"@azure/msal-react\";\nimport { InteractionType } from \"@azure/msal-browser\";\n\nimport { loginRequest } from \"../authConfig\";\nimport { ProfileData } from \"../components/DataDisplay\";\nimport { getGraphClient } from \"../graph\";\nimport { protectedResources } from \"../authConfig\";\n\nconst ProfileContent = () => {\n    /**\n     * useMsal is hook that returns the PublicClientApplication instance, \n     * an array of all accounts currently signed in and an inProgress value \n     * that tells you what msal is currently doing. For more, visit: \n     * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-react/docs/hooks.md\n     */\n    const { instance, accounts, inProgress } = useMsal();\n    const account = useAccount(accounts[0] || {});\n    const [graphData, setGraphData] = useState(null);\n\n    useEffect(() => {\n        if (account && inProgress === \"none\" && !graphData) {\n            getGraphClient({\n                account: instance.getActiveAccount(), \n                scopes: protectedResources.graphMe.scopes, \n                interactionType: InteractionType.Popup\n            }).api(\"/me\").get()\n                    .then((response) => setGraphData(response))\n                    .catch((error) => console.log(error));\n        }\n    }, [account, inProgress, instance]);\n\n    return (\n        <>\n            { graphData ? <ProfileData graphData={graphData} /> : null}\n        </>\n    );\n};\n\n/**\n * The `MsalAuthenticationTemplate` component will render its children if a user is authenticated \n * or attempt to sign a user in. Just provide it with the interaction type you would like to use \n * (redirect or popup) and optionally a [request object](https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-browser/docs/request-response-object.md)\n * to be passed to the login API, a component to display while authentication is in progress or a component to display if an error occurs. For more, visit:\n * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-react/docs/getting-started.md\n */\nexport const Profile = () => {\n    const authRequest = {\n        ...loginRequest\n    };\n\n    return (\n        <MsalAuthenticationTemplate\n            interactionType={InteractionType.Popup}\n            authenticationRequest={authRequest}\n        >\n            <ProfileContent />\n        </MsalAuthenticationTemplate>\n    )\n};"]},"metadata":{},"sourceType":"module"}