{"ast":null,"code":"/*! @azure/msal-common v4.5.0 2021-07-22 */\n'use strict';\n\nimport { __extends } from '../_virtual/_tslib.js';\nimport { Constants as Constants$1 } from '../utils/Constants.js';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\n/**\r\n * AuthErrorMessage class containing string constants used by error codes and messages.\r\n */\n\nvar AuthErrorMessage = {\n  unexpectedError: {\n    code: \"unexpected_error\",\n    desc: \"Unexpected error in authentication.\"\n  }\n};\n/**\r\n * General error class thrown by the MSAL.js library.\r\n */\n\nvar AuthError = function (_super) {\n  __extends(AuthError, _super);\n\n  function AuthError(errorCode, errorMessage, suberror) {\n    var _this = this;\n\n    var errorString = errorMessage ? errorCode + \": \" + errorMessage : errorCode;\n    _this = _super.call(this, errorString) || this;\n    Object.setPrototypeOf(_this, AuthError.prototype);\n    _this.errorCode = errorCode || Constants$1.EMPTY_STRING;\n    _this.errorMessage = errorMessage || \"\";\n    _this.subError = suberror || \"\";\n    _this.name = \"AuthError\";\n    return _this;\n  }\n  /**\r\n   * Creates an error that is thrown when something unexpected happens in the library.\r\n   * @param errDesc\r\n   */\n\n\n  AuthError.createUnexpectedError = function (errDesc) {\n    return new AuthError(AuthErrorMessage.unexpectedError.code, AuthErrorMessage.unexpectedError.desc + \": \" + errDesc);\n  };\n\n  return AuthError;\n}(Error);\n\nexport { AuthError, AuthErrorMessage };","map":{"version":3,"sources":["../../src/error/AuthError.ts"],"names":["Constants"],"mappings":";;;;;AAAA;;;;;AAOA;;;;IAGa,gBAAgB,GAAG;AAC5B,EAAA,eAAe,EAAE;AACb,IAAA,IAAI,EAAE,kBADO;AAEb,IAAA,IAAI,EAAE;AAFO;AADW,C;AAOhC;;;;;AAG+B,EAAA,SAAA,CAAA,SAAA,EAAA,MAAA,CAAA;;AAiB3B,WAAA,SAAA,CAAY,SAAZ,EAAgC,YAAhC,EAAuD,QAAvD,EAAwE;AAAxE,QAAA,KAAA,GAAA,IAAA;;AACI,QAAM,WAAW,GAAG,YAAY,GAAM,SAAS,GAAA,IAAT,GAAc,YAApB,GAAqC,SAArE;AACA,IAAA,KAAA,GAAA,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,WAAN,KAAkB,IAAlB;AACA,IAAA,MAAM,CAAC,cAAP,CAAsB,KAAtB,EAA4B,SAAS,CAAC,SAAtC;AAEA,IAAA,KAAI,CAAC,SAAL,GAAiB,SAAS,IAAIA,WAAS,CAAC,YAAxC;AACA,IAAA,KAAI,CAAC,YAAL,GAAoB,YAAY,IAAI,EAApC;AACA,IAAA,KAAI,CAAC,QAAL,GAAgB,QAAQ,IAAI,EAA5B;AACA,IAAA,KAAI,CAAC,IAAL,GAAY,WAAZ;;AACH;;;;;;;AAMM,EAAA,SAAA,CAAA,qBAAA,GAAP,UAA6B,OAA7B,EAA4C;AACxC,WAAO,IAAI,SAAJ,CAAc,gBAAgB,CAAC,eAAjB,CAAiC,IAA/C,EAAwD,gBAAgB,CAAC,eAAjB,CAAiC,IAAjC,GAAqC,IAArC,GAA0C,OAAlG,CAAP;AACH,GAFM;;AAGX,SAAA,SAAA;AAnCA,C,CAA+B,K","sourcesContent":["/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { Constants } from \"../utils/Constants\";\r\n\r\n/**\r\n * AuthErrorMessage class containing string constants used by error codes and messages.\r\n */\r\nexport const AuthErrorMessage = {\r\n    unexpectedError: {\r\n        code: \"unexpected_error\",\r\n        desc: \"Unexpected error in authentication.\"\r\n    }\r\n};\r\n\r\n/**\r\n * General error class thrown by the MSAL.js library.\r\n */\r\nexport class AuthError extends Error {\r\n\r\n    /**\r\n     * Short string denoting error\r\n     */\r\n    errorCode: string;\r\n\r\n    /**\r\n     * Detailed description of error\r\n     */\r\n    errorMessage: string;\r\n\r\n    /**\r\n     * Describes the subclass of an error\r\n     */\r\n    subError: string;\r\n\r\n    constructor(errorCode?: string, errorMessage?: string, suberror?: string) {\r\n        const errorString = errorMessage ? `${errorCode}: ${errorMessage}` : errorCode;\r\n        super(errorString);\r\n        Object.setPrototypeOf(this, AuthError.prototype);\r\n\r\n        this.errorCode = errorCode || Constants.EMPTY_STRING;\r\n        this.errorMessage = errorMessage || \"\";\r\n        this.subError = suberror || \"\";\r\n        this.name = \"AuthError\";\r\n    }\r\n\r\n    /**\r\n     * Creates an error that is thrown when something unexpected happens in the library.\r\n     * @param errDesc\r\n     */\r\n    static createUnexpectedError(errDesc: string): AuthError {\r\n        return new AuthError(AuthErrorMessage.unexpectedError.code, `${AuthErrorMessage.unexpectedError.desc}: ${errDesc}`);\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}